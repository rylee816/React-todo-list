{"version":3,"sources":["hooks/useInputState.jsx","reducers/todo.reducer.js","Contexts/TodosContext.js","hooks/useLocalStorageReducer.js","TodoForm.jsx","EditForm.jsx","TodoItem.jsx","TodoList.jsx","TodoApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["UseInputState","initialVal","useState","val","setVal","e","target","value","reducer","state","action","type","id","uuidv4","task","completed","filter","item","map","todo","text","TodosContext","createContext","DispatchContext","populateList","TodoProvider","props","key","useReducer","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","todos","Provider","children","TodoForm","useInputState","updateTask","resetTask","useContext","Paper","style","margin","padding","onSubmit","preventDefault","TextField","onChange","placeholder","fullWidth","EditForm","editTask","toggle","marginLeft","width","autoFocus","TodoItem","isEditing","UseToggle","ListItem","height","ListItemText","textDecoration","Checkbox","tabIndex","checked","onClick","ListItemSecondaryAction","IconButton","aria-label","color","memo","TodoList","List","i","Fragment","length","Divider","TodoApp","backgroundColor","elevation","AppBar","position","Toolbar","Typography","Grid","container","justify","marginTop","xs","md","lg","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98ec198a.chunk.js","sourcesContent":["import {useState} from \"react\";\r\n\r\nexport default function UseInputState (initialVal) {\r\n    const [val, setVal] = useState(initialVal);\r\n\r\n    const handleChange = e => {\r\n        setVal(e.target.value);\r\n    };\r\n\r\n    const reset = (e) => {\r\n        setVal(\"\")\r\n    };\r\n    return [val, handleChange, reset]\r\n}","import {v4 as uuidv4} from \"uuid\";\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"add\": \r\n          return [...state, {id:uuidv4(), task: action.task, completed: false}]\r\n        case \"delete\":\r\n          return state.filter((item) => {\r\n            return item.id !== action.id;\r\n        }) \r\n        case \"toggle\": \r\n        return state.map((todo) => {\r\n            return todo.id === action.id ? {...todo, completed: !todo.completed} : todo;\r\n          })\r\n        case \"edit\":\r\n            return state.map((todo)=>{\r\n                return todo.id === action.id ? {...todo, task: action.text} : todo;\r\n            })\r\n         default:\r\n             return state;     \r\n    }\r\n}\r\n\r\n    export default reducer;\r\n\r\n\r\n// addTodo: (newTask) => {\r\n//     setTodos(prev => {\r\n//         return [...prev, {id:uuidv4(), task: newTask, completed: false}]\r\n//     })\r\n// },\r\n// deleteTodo:(id) => {\r\n//     setTodos((prev) => {\r\n//         return prev.filter((item) => {\r\n//             return item.id !== id;\r\n//         })\r\n//     })\r\n//  },\r\n//  toggleTodo: (id) => {\r\n//     const updatedTodos = todos.map((todo) => {\r\n//         return  todo.id === id ? {...todo, completed: !todo.completed} : todo;\r\n//       })\r\n//       setTodos(updatedTodos)\r\n//   },\r\n//  editTodo: (id, text) => {\r\n//     const editedTodos = todos.map((todo)=>{\r\n//         return todo.id === id ? {...todo, task: text} : todo;\r\n//     })\r\n//     setTodos(editedTodos)\r\n// }\r\n\r\n// }\r\n","import React, {createContext} from \"react\";\r\nimport todoReducer from \"../reducers/todo.reducer\";\r\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nconst populateList = [\r\n    {id: 1,task: \"Learn Code\", completed: false},\r\n    {id: 2,task: \"Go to Gym\", completed: false},\r\n    {id: 3,task: \"ðŸ’– Love the Boonpie ðŸ’–\",completed: true}\r\n]\r\nexport default function TodoProvider(props){\r\n    const [todos, dispatch] = useLocalStorageReducer(\"todos\", populateList, todoReducer)\r\n\r\n\r\n    return (\r\n        <TodosContext.Provider value={todos}>\r\n        <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n        </DispatchContext.Provider>\r\n        </TodosContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import {useReducer, useEffect} from \"react\";\r\n\r\nexport default function useLocalStorageReducer(key, initialVal, reducer){\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialVal, () => {\r\n        let val;\r\n        try {\r\n            val = JSON.parse(window.localStorage.getItem(key) || String(initialVal));\r\n        } catch(e) {\r\n            val = initialVal;\r\n        }\r\n        return val;\r\n    })\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key , JSON.stringify(state))\r\n    }, [key, state])\r\n\r\n    return [state, dispatch]\r\n}","import React, {useContext} from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DispatchContext} from \"./Contexts/TodosContext\";\r\n\r\nexport default function TodoForm(props) {\r\n  const [task, updateTask, resetTask] = useInputState(\"\");\r\n  const dispatch = useContext(DispatchContext);\r\n\r\n  return (\r\n    <Paper style={{ margin: \"1rem 0\", padding: \"1rem 0\" }}>\r\n      <form\r\n        onSubmit={(e)=> {\r\n          e.preventDefault()\r\n          dispatch({type: \"add\", task: task})\r\n          resetTask('')\r\n        }}\r\n      >\r\n        <TextField\r\n          onChange={updateTask}\r\n          type=\"text\"\r\n          value={task}\r\n          placeholder=\"New Task\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport {DispatchContext} from \"./Contexts/TodosContext\";\r\n\r\nfunction EditForm(props) {\r\n\r\n  const dispatch = useContext(DispatchContext);\r\n  const [task, editTask] = useInputState(props.task);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch({type: \"edit\", id: props.id, text:task})\r\n        // editTodo(props.id, task);\r\n        props.toggle();\r\n      }}\r\n      style={{marginLeft:\"1rem\", width:\"50%\"}}\r\n    >\r\n      <TextField\r\n        style={{ width: \"100%\" }}\r\n        margin=\"normal\"\r\n        value={task}\r\n        onChange={editTask}\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditForm;\r\n","import {useState, useContext, memo} from \"react\";\r\nimport EditForm from \"./EditForm\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport {DispatchContext} from \"./Contexts/TodosContext\";\r\n\r\n\r\n function TodoItem(props) {\r\n    const [isEditing, toggle] = useState(false);\r\n    const dispatch = useContext(DispatchContext);\r\n\r\n    function UseToggle(){\r\n        toggle(!isEditing)\r\n    }\r\n\r\n  return (\r\n    <ListItem style={{height:\"64px\"}}>\r\n    {isEditing ? <EditForm task={props.task} id={props.id} toggle={UseToggle} /> :\r\n    <>\r\n      <ListItemText style={{textDecoration: props.completed ? \"line-through\": \"none\"}}>\r\n        <Checkbox tabIndex={-1} checked={props.completed} onClick={()=>dispatch({type:\"toggle\", id: props.id})}/>\r\n        {props.task}\r\n      </ListItemText>\r\n      <ListItemSecondaryAction>\r\n        <IconButton aria-label=\"Edit\" onClick={UseToggle}>\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete\"  style={{color:\"orangered\"}} onClick={()=> dispatch({type: \"delete\", id: props.id})}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n      </>\r\n      }\r\n    </ListItem>\r\n  );\r\n}\r\nexport default memo (TodoItem);\r\n","import { Paper } from \"@material-ui/core\";\r\nimport React, {useContext} from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {TodosContext} from \"./Contexts/TodosContext\";\r\n\r\n\r\nexport default function TodoList(props) {\r\nconst todos = useContext(TodosContext)\r\n\r\n  return (\r\n    <Paper>\r\n      <List>\r\n      <h1 style={{color:\"slategrey\"}}>Todo List</h1>\r\n\r\n        {todos.map((todo, i) => {\r\n          return (\r\n            <React.Fragment key={todo.id}>\r\n                  <TodoItem\r\n                  {...todo}\r\n                    completed={todo.completed}\r\n                    key={todo.id}\r\n                  />\r\n             \r\n              {i < todos.length -1 && <Divider/ >}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </Paper>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport TodoList from \"./TodoList\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TodoProvider from \"./Contexts/TodosContext\";\r\n\r\nexport default function TodoApp() {\r\n \r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: 0,\r\n        margin: 0,\r\n        height: \"100vh\",\r\n        backgroundColor: \"#fafafa\",\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\r\n        <Toolbar>\r\n          <Typography color=\"inherit\">TODO LIST V2</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container justify=\"center\" style={{ marginTop: \"1rem\" }}>\r\n        <Grid item xs={11} md={8} lg={4}>\r\n        <TodoProvider>\r\n        <TodoForm />\r\n          <TodoList />\r\n        </TodoProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import TodoApp from \"./TodoApp\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}